---
import { getSecret } from 'astro:env/server';
import { initiateDeveloperControlledWalletsClient } from "@circle-fin/developer-controlled-wallets";

interface Wallet {
  id: string;
  blockchain: string;
  address: string;
}

const secretsConfigured = Boolean( getSecret('API_KEY')) && Boolean(getSecret('ENTITY_SECRET'));

const client = initiateDeveloperControlledWalletsClient({
  apiKey: `${getSecret("API_KEY")}`,
  entitySecret: `${getSecret("ENTITY_SECRET")}`,
});

const { walletSetId } = Astro.props;

const response = await client.listWallets({
  walletSetId: walletSetId,
});
const wallets = (response.data?.wallets || []) as Wallet[];
---
<div>
  {wallets.map((wallet: Wallet) => (
    <p>Wallet ID: {wallet.id}</p>
    <p>Blockchain: {wallet.blockchain}</p>
    <p>Wallet Address: {wallet.address}</p>
  ))}
</div>

<style>
  div {
    margin-block-end: var(--space-s);
  }

  p {
    word-wrap: break-word;
  }
</style>