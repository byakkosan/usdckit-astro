---
import BaseLayout from '../../layouts/BaseLayout.astro';
import MerchantWallet from '../../components/MerchantWallet.astro';
import WalletList from '../../components/WalletList.astro';
import { JSONFilePreset } from 'lowdb/node';

import ArbLogo from '../../images/chains/arbitrum.svg';
import AvaLogo from '../../images/chains/avalanche.svg';
import BaseLogo from '../../images/chains/base.svg';
import EthLogo from '../../images/chains/ethereum.svg';
import MatLogo from '../../images/chains/polygon.svg';
import OpLogo from '../../images/chains/optimism.svg';
import UniLogo from '../../images/chains/unichain.svg';

type Data = {
  merchants: { name: string; walletSetName: string; walletSetId: string; walletId: string; paymentAcceptanceWalletName: string; paymentAcceptanceWalletSetId: string }[]
}
import { actions } from 'astro:actions';
import crypto from 'crypto';

const { id } = Astro.params;

const defaultData: Data = { merchants: [] };
const db = await JSONFilePreset<Data>('./src/db/db.json', defaultData);
const merchant = db.data.merchants.find(
  (p: { walletSetId: string }) => p.walletSetId === id
);

if (!merchant) {
  throw new Error(`merchant with id ${id} not found`);
}

const { name, paymentAcceptanceWalletSetId } = merchant;
const orderId = crypto.randomUUID();
const price = 1;

const makePaymentReponse = Astro.getActionResult(actions.makePayment.makePayment);
if (makePaymentReponse && !makePaymentReponse.error) {
  Astro.session?.set('paymentAcceptanceWallet', makePaymentReponse.data.paymentAcceptanceWallet);
  Astro.session?.set('orderId', makePaymentReponse.data.orderId);
	Astro.session?.set('amount', makePaymentReponse.data.amount);
  Astro.session?.set('paymentLink', makePaymentReponse.data.paymentLink);
  Astro.session?.set('encodedPaymentLink', makePaymentReponse.data.encodedPaymentLink);
  Astro.session?.set('merchantName', name);
  Astro.session?.set('merchantId', id);
  return Astro.redirect('/pay');
}
---
<BaseLayout title={name} altText={name} logo="/merchant-logo.svg" merchantId={id}>
  <section class="order-summary">
		<h2>Order summary</h2>
		<div class="product">
      <div class="product__image">
        <img src="/product.png" alt="Good Vibes" />
      </div>	
			<div class="product__details">
				<h3>Good Vibes</h3>
				<p>Order ID: {orderId}</p>
				<p>Qty: 1</p>
				<p>Price per unit: {price} USDC</p>
				<p>Total: {price} USDC</p>
			</div>
		</div>
    <h3>Payment options</h3>
		<form action={actions.makePayment.makePayment} method="POST">
      <fieldset>
        <legend>Select chain:</legend>
        <div class="chain-list">
          <label for="arbSepolia">
            <input id="arbSepolia" type="radio" name="chain" value="ARB_SEPOLIA" checked />
            <ArbLogo />
            <span>Arbitrum Sepolia</span>
          </label>
          <label for="avaxFuji">
            <input id="avaxFuji" type="radio" name="chain" value="AVAX_FUJI" />
            <AvaLogo />
            <span>Avalanche Fuji</span>
          </label>
          <label for="baseSepolia">
            <input id="baseSepolia" type="radio" name="chain" value="BASE_SEPOLIA" />
            <BaseLogo />
            <span>Base Sepolia</span>
          </label>
          <label for="ethSepolia">
            <input id="ethSepolia" type="radio" name="chain" value="ETH_SEPOLIA" />
            <EthLogo />
            <span>Ethereum Sepolia</span>
          </label>
          <label for="maticAmoy">
            <input id="maticAmoy" type="radio" name="chain" value="MATIC_AMOY" />
            <MatLogo />
            <span>Polygon Amoy</span>
          </label>
          <label for="opSepolia">
            <input id="opSepolia" type="radio" name="chain" value="OP_SEPOLIA" />
            <OpLogo />
            <span>Optimism Sepolia</span>
          </label>
          <label for="uniSepolia">
            <input id="uniSepolia" type="radio" name="chain" value="UNI_SEPOLIA" />
            <UniLogo />
            <span>Unichain Sepolia</span>
          </label>
        </div>
      </fieldset>
      <input type="hidden" name="orderId" value={orderId} />
      <input type="hidden" name="paymentAcceptanceWalletSetId" value={paymentAcceptanceWalletSetId} />
			<input type="hidden" name="amount" value={price} />
      <input type="hidden" name="merchantName" value={name} />
      <input type="hidden" name="merchantId" value={id} />
			<button >Pay</button>
		</form>
		{makePaymentReponse?.error && <p>Transaction failed. Please check your transaction logs for details.</p>}
	</section>
	<section class="store-metadata">
		<h2>Store metadata</h2>
    <MerchantWallet walletSetId={id} />
    <h3>Payment Acceptance Wallets</h3>
    <WalletList walletSetId={paymentAcceptanceWalletSetId} />
	</section>
</BaseLayout>

<style>
  h2 {
    margin-block-end: var(--space-s);
  }

  h3 {
    margin-block-end: var(--space-2xs);
  }

  .product {
    text-align: center;
    margin-block-end: var(--space-s);
    padding: var(--space-s);
    border-radius: var(--space-s);
    border: 2px solid grey;
    max-width: fit-content;
  }

  .product__image {
    max-width: 10em;
    margin-inline: auto;
  }

  @media screen and (min-width: 500px) {
    .product {
      display: flex;
      gap: var(--space-m);
      text-align: left;
    }

    .product__image {
      flex: none;
    }
  }

  fieldset {
    margin-block-end: var(--space-s);
  }

  legend {
    margin-block-end: var(--space-2xs);
  }

  .chain-list {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-xs);
  }

  label {
    position: relative;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    padding: var(--space-2xs);
    border-radius: var(--border-radius);
    border: 1px solid grey;
  }

  label:hover > input + :global(svg),
  label > input:checked + :global(svg) {
    filter: grayscale(0);
  }

  label:has(input:checked) {
    background-color: lightcyan
  }

  label:has(input:focus) {
    outline: 2px solid;
  }

  input[type="radio"] {
    position: absolute;
    opacity: 0;
    width: 1.5em;
    height: 1.5em;
    cursor: pointer;
  }

  input + :global(svg) {
    display: inline-block;
    width: 1.5em;
    height: 1.5em;
    margin-inline-end: var(--space-2xs);
    filter: grayscale(1);
    transition: filter 0.2s ease-in-out;
  }

  .store-metadata h2 {
    font-size: var(--step-1)
  }

  .store-metadata h3 {
    font-size: var(--step-0)
  }
</style>